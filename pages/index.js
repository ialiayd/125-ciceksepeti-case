import { useEffect, useState } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'

import Layout from "../src/components/Layout/Layout"

//COMPONENTS
import CategoryList from '../src/components/CategoryList/CategoryList'
import Header from '../src/components/Header/Header'
import Main from '../src/components/MainHOC/Main'
import ProductList from '../src/components/ProductList/ProductList'
//COMPONENTS
import { toCapitalize, toCurrencyString } from "../src/utilities/stringOperations"
import apiEndpoints from '../src/constants/apiEndpoints'


export default function Home({ products, categories }) {

  return (
    <>
      <Head>
        <title>İkinci El Project | Ali Aydemir</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Main>
        <CategoryList categories={categories} />
        <ProductList products={products} />
      </Main>
    </>
  )
}

Home.Layout = Layout;

//DONE: Categoriler ve Ürünler serverside Props ile çekilecek
//DONE: Router ile gelen parametreye göre ürün listesi yükle
//TODO: Router'dan yanlış veri gelirse hata sayfasına dön
export async function getServerSideProps({ query }) {

  const category = query.kategori;

  const productData = await fetch(apiEndpoints.product.allProducts);
  const categoryData = await fetch(apiEndpoints.category.allCategories);

  const productsJson = JSON.parse(JSON.stringify(await productData.json()));

  let products;

  if (typeof category === "undefined" || category === "tumu") {
    products = productsJson.map(p => {
      return { id: p.id, brand: toCapitalize(p.brand.title), color: toCapitalize(p.color.title), price: toCurrencyString(p.price), imageUrl: p.imageUrl, categoryId: p.category.id }
    })
  }
  else {
    products = productsJson.filter(p => p.category.id === category).map(p => {
      return { id: p.id, brand: toCapitalize(p.brand.title), color: toCapitalize(p.color.title), price: toCurrencyString(p.price), imageUrl: p.imageUrl, categoryId: p.category.id }
    })
  }

  return {
    props: {
      products: products,
      categories: await categoryData.json()
    }, // will be passed to the page component as props
  }
}